module;

/**
 * flash.cpp2
 *
 * Copyright (C) 2024 Mateusz Stadnik <matgla@live.com>
 *
 * This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version
 * 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General
 * Public License along with this program. If not, see
 * <https://www.gnu.org/licenses/>.
 */

#include <cstring>

export module hal.flash;

yasboot: namespace = {
hal: namespace = {
 
export InternalFlash: type = {
  read: (address: std::size_t, buffer: std::span<u8>) -> std::size_t = {
    std::memcpy(buffer.data(), reinterpret_cast<*void>(0x10000000 + address), buffer.size());
    return buffer.size();
  }
} 
 
} // namespace hal
} // namespace yasboot 
