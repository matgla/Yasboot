module;
/**
 * app.cpp2
 *
 * Copyright (C) 2024 Mateusz Stadnik <matgla@live.com>
 *
 * This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version
 * 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General
 * Public License along with this program. If not, see
 * <https://www.gnu.org/licenses/>.
 */

//#include <boost/sml.hpp>



export module yasboot.app;

import hal.system.disk;
import yasboot.mbr;
#include <format>

yasboot: namespace = {

release: @struct type = {
  disk_: hal::system::Disk = (); 
  mbr_: yasboot::MbrParser = (disk_);
}

}
//
//timeout: @struct type = {
//}
//
//export App: @copyable type = {
//  operator(): (in this) -> _ = {
//    using namespace boost::sml;
//    a:= :() -> void = {printf("A\n");};
//    return boost::sml::make_transition_table(
//      "initialize"_s*                       / :() = { initialize(); } = "mount_disks"_s,
//      "mount_disks"_s + on_entry<_>    / :() = { mount_disks(); },
//      "mount_disks"_s [:() -> bool = { return false; }] / :() = { printf("disks mounted\n"); } = "find_boot"_s,
//      "find_boot"_s / :() = { printf("searching boot parition\n"); } = X
//    );
//  }  
//
//  print_hello: () = {
//    printf("\n\n");
//    printf("============== YASBOOT ===============\n");
//  }
//
//  initialize: () = {
//    print_hello();
//  }
//
//  mount_disks: () = {
//    printf("Mounting disks\n");
//  }
//
//  operator=:(out this) = {
//  }
//
//  disk_: hal::system::Disk = ();
//  mbr_: yasboot::MbrParser = (disk_);
//}
//
//export app: () -> void = {
//  data: App = ();
//  sm: boost::sml::sm<App> = (data);
//}
//
//}
