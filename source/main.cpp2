/**
 * main.cpp2
 *
 * Copyright (C) 2024 Mateusz Stadnik <matgla@live.com>
 *
 * This program is free software: you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version
 * 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General
 * Public License along with this program. If not, see
 * <https://www.gnu.org/licenses/>.
 */


#include <format>

import hal.uart;
import hal.system.io;

import yasboot.app;

import hal.system.disk;
import yasboot.mbr;


main: () = {
  uart: yasboot::hal::Uart<0> = (115200);

  yasboot::hal::system::io::set_global_write(: (str: std::string_view) -> std::size_t = 
    uart$.write(str));

 // yasboot::app();
  
//  app: yasboot::App = ();
//  app.start();
  
  disk: yasboot::hal::system::Disk = ();
  mbr: yasboot::MbrParser = (disk);
  
  boot:= mbr.get_bootable_partition(); 
  if (!boot)
  {
    printf("Error: %s\n", boot.error().data());
  }
//  else {
//    printf("Found bootable partition: %d\n", boot*.type);
//  }
}

